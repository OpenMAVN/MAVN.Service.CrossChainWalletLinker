// <auto-generated />
using System;
using MAVN.Service.CrossChainWalletLinker.MsSqlRepositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace MAVN.Service.CrossChainWalletLinker.MsSqlRepositories.Migrations
{
    [DbContext(typeof(WalletLinkingContext))]
    [Migration("20200701120410_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("cross_chain_wallet_linker")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("MAVN.Service.CrossChainWalletLinker.MsSqlRepositories.Entities.ConfigurationItemEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnName("type")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnName("value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Type")
                        .IsUnique();

                    b.ToTable("configuration_items");
                });

            modelBuilder.Entity("MAVN.Service.CrossChainWalletLinker.MsSqlRepositories.Entities.WalletLinkingRequestEntity", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnName("customer_id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Fee")
                        .HasColumnName("fee")
                        .HasColumnType("text");

                    b.Property<bool>("IsConfirmedInPrivate")
                        .HasColumnName("is_confirmed_in_private")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsConfirmedInPublic")
                        .HasColumnName("is_confirmed_in_public")
                        .HasColumnType("boolean");

                    b.Property<string>("LinkCode")
                        .IsRequired()
                        .HasColumnName("link_code")
                        .HasColumnType("text");

                    b.Property<string>("PrivateAddress")
                        .IsRequired()
                        .HasColumnName("private_address")
                        .HasColumnType("text");

                    b.Property<string>("PublicAddress")
                        .HasColumnName("public_address")
                        .HasColumnType("text");

                    b.Property<string>("Signature")
                        .HasColumnName("signature")
                        .HasColumnType("text");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnName("timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("CustomerId");

                    b.HasIndex("PrivateAddress")
                        .IsUnique();

                    b.ToTable("wallet_linking_requests");
                });

            modelBuilder.Entity("MAVN.Service.CrossChainWalletLinker.MsSqlRepositories.Entities.WalletLinkingRequestsCounterEntity", b =>
                {
                    b.Property<string>("CustomerId")
                        .HasColumnName("customer_id")
                        .HasColumnType("text");

                    b.Property<int>("ApprovalsCounter")
                        .HasColumnName("approvals_counter")
                        .HasColumnType("integer");

                    b.HasKey("CustomerId");

                    b.ToTable("wallet_linking_requests_counter");
                });
#pragma warning restore 612, 618
        }
    }
}
